1) DECLARe CURSOR cur IS SELECT customer_id,customer_name,customer_tel from Customers ;
   BEGIN
   FOR rec in cur loop 
   dbms_output.put_line(rec.customer_id ||' '||rec.customer_name||' '||rec.customer_tel);
   End loop;
   End;
   /

2) CREATE OR REPLACE PROCEDURE PS_Customer_Prodcuts (v_cus_id Customers.customer_id%type) IS 
   CURSOR cur IS SELECT p.product_name FROM Orders o,Product p where o.customer_id=v_cus_id and p.product_id=o.product_id;
   BEGIN
	FOR rec IN cur LOOP
		dbms_output.put_line(rec.product_name);
	END LOOP;
   EXCEPTION 
   WHEN NO_DATA_FOUND THEN
   dbms_output.put_line('No products returned or customer not found');
   END;
   /

   BEGIN
   PS_Customer_Prodcuts('C01');
   end;
   /

3) CREATE OR REPLACE FUNCTION FN_Customer_Orders_ord (v_ord_id orders.customer_id%type) RETURN number IS
   Customer_Orders number;
   begin
   SELECT count(*) into Customer_Orders FROM orders WHERE customer_id=v_ord_id;
   return Customer_Orders;
   end;
   /

  declare
  nb number;
  i varchar2(50);
  begin
  i:=('C02');
  nb:=FN_Customer_Orders_ord(i);
  dbms_output.put_line(nb);
  end;
  /

4)CREATE OR REPLACE TRIGGER TRIG_INS_ORDERS
  BEFORE insert or update ON Orders FOR EACH ROW
  BEGIN
  IF(:NEW.orderDate<sysdate)THEN
	RAISE_APPLICATION_ERROR (-20567 ,'Order Date must be greater than or equal to todays date');
  END IF;
  END;

  INSERT INTO Orders VALUES('C01','P01',20,9999,'01/10/2020');